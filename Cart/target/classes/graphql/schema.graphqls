type Cart {         
    productId: ID!
    userId: ID!
    expirationTime: String
}

type Product {
    productId: ID!
    imageId: ID!
    stockId: ID!
    price: Int
}

type RequestStatus {
    status: Boolean!
    quantity: Int
    message: String
}

type Query {
    checkAvailability(imageId: ID!): Int              # TransactionGateway

    checkImagesInCart(imageId: ID!): Int        # MySQL
    findCartItemsByUserId(userId: ID!): [Cart]  # MySQL
    findProductById(productId: ID!): Product    # MySQL
    findAllProducts: [Product]                  # MySQL
}

type Mutation {
    addItemToCart(productId: ID!, userId: ID!, expirationTime: String!): RequestStatus
    deleteCartItems(productId: ID!, userId: ID!): String
}


# ----- TransactionGateway ---------------------------------------------
query GetTransactionsForImage($imageId: String!) {
    getTransactionsForImage(imageId: $imageId) {
        sender
        receiver
        imageId
    }
}