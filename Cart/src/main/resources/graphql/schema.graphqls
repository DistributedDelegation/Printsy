type Cart {         
    productId: ID!
    userId: ID!
    expirationTime: String
}

type Product {
    productId: ID
    imageId: ID
    stockId: ID
    price: Int
}

type CartItemTask {
    userId: ID!
    productId: ID!
    imageId: ID!
}

type Query {
    findImageAvailability(imageId: ID!): Boolean    # TransactionGateway

    findImageByImageId(imageId: ID!): Int           # MySQL
    findCartItemsByProductId(productId: ID!): Int   
    findCartItemsByUserId(userId: ID!): [Cart] 
    findProductById(productId: ID!): Product
    findAllProducts: [Product]

    getRemainingCleanupTime: Int
    peekQueue: CartItemTask
}

type Mutation {
    deleteCartItemsByUserId(userId: ID!): String
    
    addProductToProducts(imageId: ID!, stockId: ID!, price: Int!, userId: ID!): Boolean
}