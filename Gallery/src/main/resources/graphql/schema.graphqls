type Image {
  id: ID! # Unique identifier for the image (non-nullable)
  data: String! # Byte array for encoded image
}

input ImageIdList {
  imageIds: [String]!
}

type ImageUrlList {
  imageUrls: [String]!
}

type PublishedImage {
  imageId: String
  imageUrl: String
  likeCount: Int
}

type Query {
  getAllPublishedImages: [PublishedImage!]!
  getImageUrlByImageId(imageId: String!): String!
  getImageUrlsByImageIds(imageIds: ImageIdList!): ImageUrlList!
  getUserLikedImages(userId: String!): [String]!
}

type Mutation {
  saveToImageAndGalleryTable(imageUrl: String!, imageNameInput: String!, imageDescriptionInput: String!, imagePublishedYN: Boolean!, usrId: String!): ID! # Returns image ID if the save operation was successful, false otherwise.
  saveIncreasedLikeCount(imageId: String!, userId: String!): Int!
  saveDecreasedLikeCount(imageId: String!, userId: String!): Int!
}

schema {
  query: Query
  mutation: Mutation
}
