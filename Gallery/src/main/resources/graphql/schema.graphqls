type Image {
  id: ID! # Unique identifier for the image (non-nullable)
  data: String! # Byte array for encoded image
}

type Query {
  images: [Image] # Returns an array of Image types, could be null if there are no images.
  image(id: ID!): Image # Returns a single Image type based on the ID provided.
  fetchImage(url: String!): String # Creates an image with the given URL and returns an encoded image
}

type Mutation {
  createImage(imageUrl: String!): ID! # Returns image ID if the save operation was successful, false otherwise.
  updateImage(imageUrl: String!, id: ID!): String # Returns a successful / unsuccessful message.
  deleteImage(id: ID!): String # Returns a successful / unsuccessful message.
}

schema {
  query: Query
  mutation: Mutation
}
